#!/bin/bash

shopt -s extglob

chpid=1
chcwd=0

# shellcheck disable=SC2059 # $1 and $2 can contain the printf modifiers
out() { printf "$1 $2\n" "${@:3}"; }
error() { out "==> ERROR:" "$@"; } >&2
warning() { out "==> WARNING:" "$@"; } >&2
msg() { out "==>" "$@"; }
die() { error "$@"; exit 1; }

ignore_error() {
  "$@" 2>/dev/null
  return 0
}

usage() {
  cat <<EOF
usage: ${0##*/} [command] [arguments...]

    -h                  Print this help message
    -p <pid>            Run in /proc/\$pid/root instead of pid 1
    -u <user>[:group]   Specify non-root user and optional group to use
    -c                  Export \$HOME=/proc/\$pid/cwd

If 'command' is unspecified, ${0##*/} will launch \$SHELL($SHELL) or /bin/sh.

EOF
}


unchroot() {
  [[ -d $chrootdir ]] || die "Can't create chroot on non-directory %s" "$chrootdir"

  chroot_args=()
  [[ $userspec ]] && chroot_args+=(--userspec "$userspec")

  exec chroot "${chroot_args[@]}" -- "$chrootdir" "${args[@]}"
}

unchroot_readlink() {
  printf %s $($0 -p $chpid /bin/readlink -f "$1")
}

unchroot_shell() {
  if [[ -n $(unchroot_readlink $SHELL) ]] ;then
    printf %s $SHELL
  else
    printf %s /bin/sh
  fi
}

while getopts ':hp:u:c' flag; do
  case $flag in
    h)
      usage
      exit 0
      ;;
    p)
      chpid=$OPTARG
      ;;
    u)
      userspec=$OPTARG
      ;;
    c)
      chcwd=1
      ;;
    :)
      die '%s: option requires an argument -- '\''%s'\' "${0##*/}" "$OPTARG"
      ;;
    ?)
      die '%s: invalid option -- '\''%s'\' "${0##*/}" "$OPTARG"
      ;;
  esac
done
shift $(( OPTIND - 1 ))

chrootdir=/proc/$chpid/root
(( EUID == 0 )) || die 'This script must be run with root privileges'
args=("$@")
[[ -z "$@" ]] && args=$(unchroot_shell)
(( $chcwd )) && export HOME=$(unchroot_readlink /proc/$chpid/cwd)
unchroot